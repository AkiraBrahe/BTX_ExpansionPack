using BattleTech;
using System.Linq;

namespace BTX_ExpansionPack.Fixes
{
    internal class BuildingTargetingExploit
    {
        [HarmonyPatch(typeof(AttackEvaluator), "MakeAttackOrder")]
        public static class AttackEvaluator_MakeAttackOrder
        {
            [HarmonyPrefix]
            [HarmonyWrapSafe]
            public static void Prefix(AbstractActor unit)
            {
                if (unit == null || unit.BehaviorTree == null || unit.BehaviorTree.enemyUnits == null)
                    return;

                var enemyMechs = unit.BehaviorTree.enemyUnits
                    .OfType<Mech>()
                    .Where(m => !m.IsDead && !string.IsNullOrEmpty(m.standingOnBuildingGuid))
                    .ToList();

                System.Random rng = new();
                foreach (var mech in enemyMechs)
                {
                    var building = unit.Combat.FindCombatantByGUID(mech.standingOnBuildingGuid, true) as Building;
                    if (building != null)
                    {
                        if (rng.NextDouble() < 1.0)
                        {
                            if (!unit.BehaviorTree.enemyUnits.Contains((ICombatant)building))
                            {
                                unit.BehaviorTree.enemyUnits.Insert(0, (ICombatant)building);
                            }
                        }
                    }
                }
            }
        }
    }
}
